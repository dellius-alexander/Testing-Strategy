# escape=\ (backslash)
#
# WARNING: this file was autogenerated by generate-included-image.js
# using
#   npm run add:included -- 5.3.0 cypress/browsers:node12.14.1-chrome85-ff81
#
# build this image with command
#   docker build -t cypress/included:5.3.0 .
#
FROM cypress/included:5.3.0
RUN mkdir /e2e && \
    cd /e2e 
# avoid too many progress messages
# https://github.com/cypress-io/cypress/issues/1243
ENV CI=1

# disable shared memory X11 affecting Cypress v4 and Chrome
# https://github.com/cypress-io/cypress-docker-images/issues/270
ENV QT_X11_NO_MITSHM=1
ENV _X11_NO_MITSHM=1
ENV _MITSHM=0

# should be root user
RUN echo "whoami: $(whoami)"
RUN npm config -g set user $(whoami)

# command "id" should print:
# uid=0(root) gid=0(root) groups=0(root)
# which means the current user is root
RUN id

# point Cypress at the /root/cache no matter what user account is used
# see https://on.cypress.io/caching
ENV CYPRESS_CACHE_FOLDER=/root/.cache/Cypress
RUN npm install --save-dev "cypress@5.4.0"
RUN cypress verify

# Cypress cache and installed version
# should be in the root user's home folder
RUN cypress cache path
RUN cypress cache list
RUN cypress info

# give every user read access to the "/root" folder where the binary is cached
# we really only need to worry about the top folder, fortunately
RUN ls -la /root
RUN chmod 755 /root

# always grab the latest NPM and Yarn
# otherwise the base image might have old versions
RUN npm i -g yarn@latest npm@latest
# Install additional plugins
RUN npm i cy-view --save-dev
RUN npm i cypress-commands --save-dev
RUN npm i cypress-cy-select --save-dev
RUN npm i -D cypress-wait-until --save-dev
RUN npm install -D cypress-xpath --save-dev
# unset NODE_OPTIONS # this is not the same as export NODE_OPTIONS=
ENV NODE_OPTIONS='--max-http-header-size=1048576 --http-parser=legacy'

# set debugging for dev purposes *************
ENV DEBUG="cypress:* cypress run" 

RUN printf "node version:    $(node -v)\n"
RUN printf "npm version:     $(npm -v)\n"
RUN printf "yarn version:    $(yarn -v)\n"
RUN printf "debian version:  $(cat /etc/debian_version)\n"
RUN printf "user:            $(whoami)\n"
RUN printf "chrome:          $(google-chrome --version || true)\n"
RUN printf "firefox:         $(firefox --version || true)\n"
COPY [ "../qa/qa_tests/", "/e2e/cypress/integration/" ]
# cypress run command
CMD [ "cypress", "run" ]
